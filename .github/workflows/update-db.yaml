name: Update Database

# The workflow runs when something change in the knowledge base or can be triggered manually
on:
  workflow_dispatch:
  push:
    paths:
      - "knowledge-base/**"

env:
  AZURE_SEARCH_URI: ${{ secrets.AZURE_SEARCH_URI }}
  AZURE_SEARCH_KEY: ${{ secrets.AZURE_SEARCH_KEY }}
  AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
  AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}

jobs:
  update_db:
    name: Update Database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install langchain==0.2.11 langchain-community==0.2.10 markdown==3.6 unstructured==0.14.7 langchain-openai==0.1.22 azure-search-documents azure-identity

      - name: Get public IP address
        id: get_ip
        run: echo "PUBLIC_IP=$(curl -s https://api.ipify.org)" >> $GITHUB_ENV

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            }

      - name: Add IP to Azure OpenAI whitelist
        run: |
          az cognitiveservices account network-rule add \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_OPENAI_SERVICE_NAME }} \
            --ip-address ${{ env.PUBLIC_IP }}

      - name: Add IP to Azure Search whitelist
        run: |
          # Fetch the existing IP rules
          existing_rules=$(az search service show \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_SEARCH_SERVICE_NAME }} \
            --query "networkRuleSet.ipRules" \
            --output json)

          # Prepare the new IP rule as JSON
          new_ip_rule="{\"value\": \"${{ env.PUBLIC_IP }}\"}"

          # Combine the new IP rule with the existing ones
          if [[ $existing_rules == "null" ]]; then
            updated_rules="[$new_ip_rule]"
          else
            updated_rules=$(echo "$existing_rules" | sed 's/]/, '"$new_ip_rule"']/')
          fi

          # Update the Azure Search service with the new list of IP rules
          az search service update \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_SEARCH_SERVICE_NAME }} \
            --set networkRuleSet.ipRules="$updated_rules"

      - name: Wait for 30 seconds
        run: sleep 30

      - name: Run update-db script
        run: python .github/scripts/update-db.py

      - name: Remove IP from Azure OpenAI whitelist
        run: |
          az cognitiveservices account network-rule remove \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_OPENAI_SERVICE_NAME }} \
            --ip-address ${{ env.PUBLIC_IP }}

      - name: Remove IP from Azure Search whitelist
        run: |
          # Fetch the current network rules
          existing_rules=$(az search service show \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_SEARCH_SERVICE_NAME }} \
            --query "networkRuleSet.ipRules" -o tsv)

          # Remove the last IP rule (last element in the array)
          ip_list=$(echo "$existing_rules" | sed '$d' | sed 's/,$//')

          updated_rules=$(echo "$ip_list" | jq -R '[split(" ") | .[] | {value: .}]')

          echo $updated_rules
